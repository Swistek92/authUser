{"version":3,"sources":["components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Auth/AuthForm.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","useState","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","className","classes","header","to","logo","onClick","Layout","ProfileForm","history","useHistory","newPasswordInputRef","useRef","onSubmit","e","preventDefault","enteredNewPassword","current","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","res","replace","form","control","htmlFor","ref","minLength","type","id","action","UserProfile","profile","AuthForm","isLogin","setIsLogin","error","setError","isLoading","setIsLoading","emailInputRef","passwordInputRef","auth","url","enteredEmail","enterdPassword","email","ok","json","data","errorMessage","message","Error","expiresIn","toISOString","catch","err","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9aec8cda.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2rBZl\",\"control\":\"ProfileForm_control__NCTXo\",\"action\":\"ProfileForm_action__9jjhp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__noPIy\",\"logo\":\"MainNavigation_logo__1TSE0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__35-1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__3jmny\"};","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: '',\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n  const remainingDuration = adjExpirationTime - currentTime;\r\n\r\n  return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem('token');\r\n  const storedExpirationDate = localStorage.getItem('expirationTime');\r\n\r\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n\r\n  if (remainingTime <= 3600) {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    token: storedToken,\r\n    duration: remainingTime,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationTime');\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expirationTime', expirationTime);\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      console.log(tokenData.duration);\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n    }\r\n  }, [tokenData, logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const authCtx = useContext(AuthContext);\n\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const logoutHanlder = () => {\n    authCtx.logout();\n  };\n\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to='/auth'>Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to='/profile'>Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHanlder}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\nimport classes from './ProfileForm.module.css';\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const authCtx = useContext(AuthContext);\n\n  const newPasswordInputRef = useRef();\n\n  const submitHanlder = (e) => {\n    e.preventDefault();\n\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    fetch(\n      'https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyBTxWcRQPF3VfexM0uWdwqRU4_rBpu_-bg',\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredNewPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    ).then((res) => {\n      // no catch err\n      history.replace('/');\n      console.log(res);\n    });\n  };\n\n  return (\n    <form onSubmit={submitHanlder} className={classes.form}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input\n          ref={newPasswordInputRef}\n          minLength='7'\n          type='password'\n          id='new-password'\n        />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const [isLogin, setIsLogin] = useState(true);\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    let enteredEmail = emailInputRef.current.value;\n    let enterdPassword = passwordInputRef.current.value;\n\n    // option validation over here\n\n    setIsLoading(true);\n\n    let url;\n\n    if (isLogin) {\n      url =\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBTxWcRQPF3VfexM0uWdwqRU4_rBpu_-bg';\n    } else {\n      url =\n        ' https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBTxWcRQPF3VfexM0uWdwqRU4_rBpu_-bg';\n    }\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enterdPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          emailInputRef.current.value = '';\n          passwordInputRef.current.value = '';\n          setError(null);\n\n          return res.json();\n        } else {\n          res.json().then((data) => {\n            let errorMessage = data.error.message\n              ? data.error.message\n              : 'Authentication failed';\n\n            setError(errorMessage);\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace('/');\n      })\n      .catch((err) => {\n        console.log('errror!', err);\n      });\n  };\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input\n            ref={passwordInputRef}\n            type='password'\n            id='password'\n            required\n          />\n          {error && <h3 className={classes.error}> {error}</h3>}\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          )}\n          {isLoading && <p>loading</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path='/' exact>\n          <HomePage />\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path='/auth'>\n            <AuthPage />\n          </Route>\n        )}\n        {authCtx.isLoggedIn && (\n          <Route path='/profile'>\n            <UserProfile />\n          </Route>\n        )}\n        <Route path='*'>\n          <Redirect to='/' />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './store/auth-context';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__23z2e\",\"error\":\"AuthForm_error__2Ifqe\",\"control\":\"AuthForm_control__35MvS\",\"actions\":\"AuthForm_actions__3F2hy\",\"toggle\":\"AuthForm_toggle__ro3ng\"};"],"sourceRoot":""}